{
  "function-expected": {
    "name": "function-expected",
    "summary": "Students have problems calling function and passing correct parameters.",
    "pattern": {
      "textBlocks": {
        "some": {
          "type": "computerOutput",
          "text": {
            "reg": "expected a function .* but"
          }
        }
      }
    }
  },
  "function-is-not-defined": {
    "name": "function-is-not-defined",
    "summary": "Students should have basic skills to check whether they already defined the function before they call them.",
    "pattern": {
      "textBlocks": {
        "some": {
          "type": "computerOutput",
          "text": {
            "reg": "function ([^\\s]+)( is)? (?:not defined|undefined)",
            "pats": [
              "?x"
            ]
          }
        }
      }
    }
  },
  "library-function-is-not-defined": {
    "name": "library-function-is-not-defined",
    "summary": "A library was not loaded.",
    "pattern": {
      "textBlocks": {
        "some": {
          "type": "computerOutput",
          "text": {
            "reg": "function ([^\\s]+)( is)? (?:not defined|undefined)",
            "pats": [
              {
                "concept": "library-function"
              }
            ]
          }
        }
      }
    }
  },
  "function-expected-2": {
    "name": "function-expected-2",
    "summary": "Students have trouble understanding how to correctly pass arguments to function, and they should understand that when they put parenthesis around variable, this means function call.",
    "pattern": {
      "textBlocks": {
        "and": [
          {
            "some": {
              "type": "sourceCode",
              "text": {
                "reg": "\\(([^\\s]+) \\(([^\\s]+)\\)",
                "pats": [
                  "?x",
                  "?y"
                ]
              }
            }
          },
          {
            "some": {
              "type": "computerOutput",
              "text": {
                "reg": "expected a function .* but"
              }
            }
          }
        ]
      }
    }
  },
  "var-not-defined": {
    "name": "var-not-defined",
    "summary": "?y -- misspelled? not assigned? missing string quotes?",
    "pattern": {
      "textBlocks": {
        "some": {
          "type": "computerOutput",
          "text": {
            "reg": "([^\\s\\:]+)[:\\s].*variable.* not defined",
            "pats": [
              "?y"
            ]
          }
        }
      }
    }
  },
  "wrong-number-of-arguments": {
    "name": "wrong-number-of-arguments",
    "summary": "Students aren't passing the correct number of arguments to function.",
    "pattern": {
      "textBlocks": {
        "and": [
          {
            "some": {
              "type": "sourceCode",
              "text": {
                "reg": "\\(([^\\s]+) [^\\(]+",
                "pats": [
                  "?x"
                ]
              }
            }
          },
          {
            "some": {
              "type": "computerOutput",
              "text": {
                "reg": "expects only \\d+ arguments, but found \\d+"
              }
            }
          }
        ]
      }
    }
  },
  "function-expected-3": {
    "name": "function-expected-3",
    "summary": "Students don't understand when to put parenthesis correctly.",
    "pattern": {
      "textBlocks": {
        "and": [
          {
            "some": {
              "type": "sourceCode",
              "text": {
                "reg": "\\(([^\\s]+) [^\\(]+",
                "pats": [
                  "?x"
                ]
              }
            }
          },
          {
            "some": {
              "type": "computerOutput",
              "text": {
                "reg": "expected a function .* but"
              }
            }
          }
        ]
      }
    }
  },
  "wrong-argument": {
    "name": "wrong-argument",
    "summary": "Student is passing wrong type of arguments to the function.",
    "pattern": {
      "textBlocks": {
        "some": {
          "type": "computerOutput",
          "text": {
            "reg": "([^\\s]+): expects \\D+[\\d]*\\D+(?:given|but)",
            "pats": [
              "?x"
            ]
          }
        }
      }
    }
  },
  "var-not-defined-2": {
    "name": "var-not-defined-2",
    "summary": "Students don't know how to check and define variables in their code.",
    "pattern": {
      "textBlocks": {
        "and": [
          {
            "some": {
              "type": "sourceCode",
              "text": {
                "reg": "\\(([^\\s]+) [^\\(]+",
                "pats": [
                  "?x"
                ]
              }
            }
          },
          {
            "some": {
              "type": "computerOutput",
              "text": {
                "reg": "variable ([^\\s]+).*undefined",
                "pats": [
                  "?y"
                ]
              }
            }
          }
        ]
      }
    }
  },
  "wrong-argument-2": {
    "name": "wrong-argument-2",
    "summary": "Student is passing wrong type of arguments to the function.",
    "pattern": {
      "textBlocks": {
        "and": [
          {
            "some": {
              "type": "sourceCode",
              "text": {
                "reg": "\\(([^\\s]+)"
              }
            }
          },
          {
            "some": {
              "type": "computerOutput",
              "text": {
                "reg": "([^\\s]+): expects \\D+[\\d]*\\D+(?:given|but) \\(([^\\\\)]+)",
                "pats": [
                  "?x",
                  "?y"
                ]
              }
            }
          }
        ]
      }
    }
  },
  "var-not-defined-3": {
    "name": "var-not-defined-3",
    "summary": "Student doesn't how to check undefined error of function call. And let them to take a look at ?x documentation.",
    "pattern": {
      "textBlocks": {
        "and": [
          {
            "some": {
              "type": "sourceCode",
              "text": {
                "reg": "\\(([^\\s]+)"
              }
            }
          },
          {
            "some": {
              "type": "computerOutput",
              "text": {
                "reg": "function ([^\\s]+).*not defined",
                "pats": [
                  "?x"
                ]
              }
            }
          }
        ]
      }
    }
  },
  "wrong-argument-3": {
    "name": "wrong-argument-3",
    "summary": "Student doesn't understand what does parentheses mean in Racket. They should be able to distinguish it with function call.",
    "pattern": {
      "textBlocks": {
        "and": [
          {
            "some": {
              "type": "sourceCode",
              "text": {
                "reg": "\\(\\(.*\\)\\)"
              }
            }
          },
          {
            "some": {
              "type": "computerOutput",
              "text": {
                "reg": "([^\\s]+):.*expected.*(?:given|but)"
              }
            }
          }
        ]
      }
    }
  },
  "closing-expected": {
    "name": "closing-expected",
    "summary": "Student doesn't know to read basic error message, and maybe they don't know how to define a function call.",
    "pattern": {
      "textBlocks": {
        "and": [
          {
            "some": {
              "type": "sourceCode",
              "text": {
                "reg": "\\(.*[^\\)]$"
              }
            }
          },
          {
            "some": {
              "type": "computerOutput",
              "text": {
                "reg": "([^\\s]+): expected.*\\) to close \\("
              }
            }
          }
        ]
      }
    }
  },
  "undefined": {
    "summary": "For this exercise, student should understand difference between leaf and branch.",
    "pattern": {
      "textBlocks": {
        "some": {
          "type": "sourceCode",
          "text": {
            "reg": "\\(\\+ 1\\(count-tree \\((?:branch-left|branch-right) tree"
          }
        }
      }
    }
  }
}